/* tslint:disable */
/* eslint-disable */
/**
 * ResilientDB API
 * Key-Value Querying Interface for ResilientDB
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetTransactionRequest
 */
export interface GetTransactionRequest {
    /**
     * Name of the collection to query
     * @type {string}
     * @memberof GetTransactionRequest
     */
    collectionName: string;
    /**
     * Key to filter by
     * @type {string}
     * @memberof GetTransactionRequest
     */
    filterKey: string;
    /**
     * Value to filter for
     * @type {string}
     * @memberof GetTransactionRequest
     */
    filterValue: string;
}

/**
 * Check if a given object implements the GetTransactionRequest interface.
 */
export function instanceOfGetTransactionRequest(value: object): value is GetTransactionRequest {
    if (!('collectionName' in value) || value['collectionName'] === undefined) return false;
    if (!('filterKey' in value) || value['filterKey'] === undefined) return false;
    if (!('filterValue' in value) || value['filterValue'] === undefined) return false;
    return true;
}

export function GetTransactionRequestFromJSON(json: any): GetTransactionRequest {
    return GetTransactionRequestFromJSONTyped(json, false);
}

export function GetTransactionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetTransactionRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'collectionName': json['collection_name'],
        'filterKey': json['filter_key'],
        'filterValue': json['filter_value'],
    };
}

export function GetTransactionRequestToJSON(json: any): GetTransactionRequest {
    return GetTransactionRequestToJSONTyped(json, false);
}

export function GetTransactionRequestToJSONTyped(value?: GetTransactionRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'collection_name': value['collectionName'],
        'filter_key': value['filterKey'],
        'filter_value': value['filterValue'],
    };
}

