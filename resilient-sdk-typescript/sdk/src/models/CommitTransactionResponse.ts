/* tslint:disable */
/* eslint-disable */
/**
 * ResilientDB API
 * Key-Value Querying Interface for ResilientDB
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CommitTransactionResponse
 */
export interface CommitTransactionResponse {
    /**
     * 
     * @type {string}
     * @memberof CommitTransactionResponse
     */
    status?: CommitTransactionResponseStatusEnum;
    /**
     * Response message
     * @type {string}
     * @memberof CommitTransactionResponse
     */
    message?: string;
}


/**
 * @export
 */
export const CommitTransactionResponseStatusEnum = {
    Success: 'success',
    Error: 'error'
} as const;
export type CommitTransactionResponseStatusEnum = typeof CommitTransactionResponseStatusEnum[keyof typeof CommitTransactionResponseStatusEnum];


/**
 * Check if a given object implements the CommitTransactionResponse interface.
 */
export function instanceOfCommitTransactionResponse(value: object): value is CommitTransactionResponse {
    return true;
}

export function CommitTransactionResponseFromJSON(json: any): CommitTransactionResponse {
    return CommitTransactionResponseFromJSONTyped(json, false);
}

export function CommitTransactionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommitTransactionResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'status': json['status'] == null ? undefined : json['status'],
        'message': json['message'] == null ? undefined : json['message'],
    };
}

export function CommitTransactionResponseToJSON(json: any): CommitTransactionResponse {
    return CommitTransactionResponseToJSONTyped(json, false);
}

export function CommitTransactionResponseToJSONTyped(value?: CommitTransactionResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': value['status'],
        'message': value['message'],
    };
}

