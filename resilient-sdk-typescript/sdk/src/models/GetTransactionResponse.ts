/* tslint:disable */
/* eslint-disable */
/**
 * ResilientDB API
 * Key-Value Querying Interface for ResilientDB
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetTransactionResponse
 */
export interface GetTransactionResponse {
    /**
     * 
     * @type {string}
     * @memberof GetTransactionResponse
     */
    status?: GetTransactionResponseStatusEnum;
    /**
     * JSON string containing the filtered data
     * @type {string}
     * @memberof GetTransactionResponse
     */
    data?: string;
}


/**
 * @export
 */
export const GetTransactionResponseStatusEnum = {
    Success: 'success',
    Error: 'error'
} as const;
export type GetTransactionResponseStatusEnum = typeof GetTransactionResponseStatusEnum[keyof typeof GetTransactionResponseStatusEnum];


/**
 * Check if a given object implements the GetTransactionResponse interface.
 */
export function instanceOfGetTransactionResponse(value: object): value is GetTransactionResponse {
    return true;
}

export function GetTransactionResponseFromJSON(json: any): GetTransactionResponse {
    return GetTransactionResponseFromJSONTyped(json, false);
}

export function GetTransactionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetTransactionResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'status': json['status'] == null ? undefined : json['status'],
        'data': json['data'] == null ? undefined : json['data'],
    };
}

export function GetTransactionResponseToJSON(json: any): GetTransactionResponse {
    return GetTransactionResponseToJSONTyped(json, false);
}

export function GetTransactionResponseToJSONTyped(value?: GetTransactionResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': value['status'],
        'data': value['data'],
    };
}

