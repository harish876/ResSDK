/* tslint:disable */
/* eslint-disable */
/**
 * ResilientDB API
 * Key-Value Querying Interface for ResilientDB
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CommitTransactionRequestValue } from './CommitTransactionRequestValue';
import {
    CommitTransactionRequestValueFromJSON,
    CommitTransactionRequestValueFromJSONTyped,
    CommitTransactionRequestValueToJSON,
    CommitTransactionRequestValueToJSONTyped,
} from './CommitTransactionRequestValue';

/**
 * 
 * @export
 * @interface CommitTransactionRequest
 */
export interface CommitTransactionRequest {
    /**
     * Transaction type (INSERT, CREATE_COLLECTION, etc.)
     * @type {string}
     * @memberof CommitTransactionRequest
     */
    id: string;
    /**
     * 
     * @type {CommitTransactionRequestValue}
     * @memberof CommitTransactionRequest
     */
    value: CommitTransactionRequestValue;
}

/**
 * Check if a given object implements the CommitTransactionRequest interface.
 */
export function instanceOfCommitTransactionRequest(value: object): value is CommitTransactionRequest {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    return true;
}

export function CommitTransactionRequestFromJSON(json: any): CommitTransactionRequest {
    return CommitTransactionRequestFromJSONTyped(json, false);
}

export function CommitTransactionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommitTransactionRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'value': CommitTransactionRequestValueFromJSON(json['value']),
    };
}

export function CommitTransactionRequestToJSON(json: any): CommitTransactionRequest {
    return CommitTransactionRequestToJSONTyped(json, false);
}

export function CommitTransactionRequestToJSONTyped(value?: CommitTransactionRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'value': CommitTransactionRequestValueToJSON(value['value']),
    };
}

