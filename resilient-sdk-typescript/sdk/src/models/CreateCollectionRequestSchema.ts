/* tslint:disable */
/* eslint-disable */
/**
 * ResilientDB API
 * Key-Value Querying Interface for ResilientDB
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateCollectionRequestSchema
 */
export interface CreateCollectionRequestSchema {
    /**
     * Field definitions for the collection
     * @type {Array<{ [key: string]: string; }>}
     * @memberof CreateCollectionRequestSchema
     */
    fields: Array<{ [key: string]: string; }>;
    /**
     * Required field names
     * @type {Array<string>}
     * @memberof CreateCollectionRequestSchema
     */
    required: Array<string>;
}

/**
 * Check if a given object implements the CreateCollectionRequestSchema interface.
 */
export function instanceOfCreateCollectionRequestSchema(value: object): value is CreateCollectionRequestSchema {
    if (!('fields' in value) || value['fields'] === undefined) return false;
    if (!('required' in value) || value['required'] === undefined) return false;
    return true;
}

export function CreateCollectionRequestSchemaFromJSON(json: any): CreateCollectionRequestSchema {
    return CreateCollectionRequestSchemaFromJSONTyped(json, false);
}

export function CreateCollectionRequestSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateCollectionRequestSchema {
    if (json == null) {
        return json;
    }
    return {
        
        'fields': json['fields'],
        'required': json['required'],
    };
}

export function CreateCollectionRequestSchemaToJSON(json: any): CreateCollectionRequestSchema {
    return CreateCollectionRequestSchemaToJSONTyped(json, false);
}

export function CreateCollectionRequestSchemaToJSONTyped(value?: CreateCollectionRequestSchema | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'fields': value['fields'],
        'required': value['required'],
    };
}

